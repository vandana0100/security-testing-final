{
  "openapi": "3.0.0",
  "info": {
    "title": "Task Management API Documentation",
    "version": "1.0.0",
    "description": "This is the API documentation for the Task Management application."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Branch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier for the branch"
          },
          "name": {
            "type": "string",
            "description": "The name of the branch"
          },
          "address": {
            "type": "string",
            "description": "The address of the branch"
          },
          "phone": {
            "type": "string",
            "description": "The contact phone number of the branch"
          }
        }
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier for the employee"
          },
          "name": {
            "type": "string",
            "description": "The name of the employee"
          },
          "position": {
            "type": "string",
            "description": "The position of the employee in the company"
          },
          "department": {
            "type": "string",
            "description": "The department where the employee works"
          },
          "email": {
            "type": "string",
            "description": "The email address of the employee"
          },
          "phone": {
            "type": "string",
            "description": "The phone number of the employee"
          },
          "branchId": {
            "type": "integer",
            "description": "The ID of the branch the employee is assigned to"
          }
        }
      },
      "EmployeeList": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "description": "The ID of the branch to which employees belong"
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Employee"
            },
            "description": "List of employees for a particular branch"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Optional error code"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/branches": {
      "post": {
        "summary": "Create a new branch",
        "tags": [
          "Branches"
        ],
        "description": "API endpoint to create a new branch in the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the branch"
                  },
                  "address": {
                    "type": "string",
                    "description": "Physical address of the branch"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Contact phone number of the branch"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Branch created successfully"
          },
          "400": {
            "description": "Bad request, invalid input data"
          }
        }
      },
      "get": {
        "summary": "Get all branches",
        "tags": [
          "Branches"
        ],
        "description": "Retrieve a list of all branches in the system.",
        "responses": {
          "200": {
            "description": "Successfully retrieved all branches",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "name": "Main Branch",
                    "address": "123 Main St",
                    "phone": "123-456-7890"
                  },
                  {
                    "id": 2,
                    "name": "Branch 2",
                    "address": "456 Branch Rd",
                    "phone": "987-654-3210"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/branches/{id}": {
      "get": {
        "summary": "Get branch by ID",
        "tags": [
          "Branches"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the branch to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Branch found and retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Main Branch",
                  "address": "123 Main St",
                  "phone": "123-456-7890"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found for the given ID"
          }
        }
      },
      "put": {
        "summary": "Update an existing branch by ID",
        "tags": [
          "Branches"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the branch to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Updated name of the branch"
                  },
                  "address": {
                    "type": "string",
                    "description": "Updated address of the branch"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Updated phone number of the branch"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Branch updated successfully"
          },
          "404": {
            "description": "Branch not found for the given ID"
          }
        }
      },
      "delete": {
        "summary": "Delete a branch by ID",
        "tags": [
          "Branches"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the branch to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Branch deleted successfully (No content returned)"
          },
          "404": {
            "description": "Branch not found for the given ID"
          }
        }
      }
    },
    "/api/v1/employees": {
      "get": {
        "summary": "Get all employees",
        "description": "Retrieve a list of all employees",
        "tags": [
          "Employees"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved employee list",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "name": "John Doe",
                    "position": "Software Engineer",
                    "department": "IT",
                    "email": "johndoe@example.com",
                    "phone": "123-456-7890",
                    "branchId": 101
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new employee",
        "description": "Add a new employee to the system",
        "tags": [
          "Employees"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Jane Doe"
                  },
                  "position": {
                    "type": "string",
                    "example": "Project Manager"
                  },
                  "department": {
                    "type": "string",
                    "example": "Operations"
                  },
                  "email": {
                    "type": "string",
                    "example": "janedoe@example.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": "987-654-3210"
                  },
                  "branchId": {
                    "type": "integer",
                    "example": 102
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created employee",
            "content": {
              "application/json": {
                "example": {
                  "id": 2,
                  "name": "Jane Doe",
                  "position": "Project Manager",
                  "department": "Operations",
                  "email": "janedoe@example.com",
                  "phone": "987-654-3210",
                  "branchId": 102
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/{id}": {
      "get": {
        "summary": "Get an employee by ID",
        "description": "Retrieve details of a specific employee by their ID",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Employee ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved employee details",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "John Doe",
                  "position": "Software Engineer",
                  "department": "IT",
                  "email": "johndoe@example.com",
                  "phone": "123-456-7890",
                  "branchId": 101
                }
              }
            }
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "put": {
        "summary": "Update an employee",
        "description": "Modify details of an existing employee",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Employee ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "string"
                  },
                  "department": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "branchId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an employee",
        "description": "Remove an employee from the system",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Employee ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Employee deleted successfully"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      }
    },
    "/api/v1/employees/branch/{branchId}": {
      "get": {
        "summary": "Get all employees for a specific branch",
        "description": "Retrieve a list of employees assigned to a particular branch",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "description": "Branch ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved employees for the branch"
          }
        }
      }
    },
    "/api/v1/employees/department/{department}": {
      "get": {
        "summary": "Get all employees in a department",
        "description": "Retrieve employees working in a specific department",
        "tags": [
          "Employees"
        ],
        "parameters": [
          {
            "name": "department",
            "in": "path",
            "required": true,
            "description": "Department name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved employees for the department"
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Get the health status of the API",
        "tags": [
          "Health"
        ],
        "description": "Returns a simple message indicating if the API is healthy and functioning.",
        "responses": {
          "200": {
            "description": "The API is healthy and operational.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Server is healthy"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Employees",
      "description": "API endpoints for managing employees"
    }
  ]
}